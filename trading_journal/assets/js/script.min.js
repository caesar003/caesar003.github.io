$(document).ready(function(){const t={render:()=>{let e="",a=0;for(let n=0;n<Trades.length;n++){const{date:d,pair:l,type:s,setup:o,volume:r,entry:i,sl:p,tp:c,exitDate:$,exitPrice:u,profit:h,swap:b,comment:m,ss:f}=Trades[n];e+=t.getTR(Trades[n],a),a=a+h+b}$("#tradeList").html(e)},getTR:(e,a)=>{const{date:n,pair:d,type:l,setup:s,volume:o,entry:r,sl:i,tp:p,exitDate:c,exitPrice:$,profit:u,swap:h,comment:b,ss:m}=e;let f="";if("deposit"===l)f=`<tr><td>${n}</td><td>${d}</td><td>${s}</td><td>${l}</td><td>-</td><td>-</td><td>-</td><td>-</td><td>-</td><td>${c}</td><td>-</td><td>-</td><td>${b}</td><td class="number">${(a+u+h).toFixed(2)}</td><td>-</td></tr>`;else{let e=0,m=0;switch(d){case"xauusd":e=2,m=100;break;case"usdjpy":e=3,m=1e3;break;default:e=5,m=1e5}f=`<tr><td>${n}</td><td>${d}</td><td>${s}</td><td>${l}</td><td class="number">${o}</td><td class="number">${r.toFixed(e)}</td><td class="number">${i.toFixed(e)}</td><td class="number">${p.toFixed(e)}</td><td class="number">${t.calculateRisk(a,l,d,r,i,o)}</td><td>${c}</td><td class="number">${$.toFixed(e)}</td><td class="number">${u}</td><td>${b}</td><td class="number">${a+u+h}</td><td class="number">${((u+h)/a*100).toFixed(2)}</td></tr>`}return f},calculateRisk:(t,e,a,n,d,l)=>{let s=0,o=0,r=0;switch(a){case"xauusd":s=2,o=100;break;case"usdjpy":s=3,o=1e3;break;default:s=5,o=1e5}return(((r="long"===e?(n-d).toFixed(s)*o:(d-n).toFixed(s)*o)*l).toFixed(2)/t*100).toFixed(2)},calculateDrawdown:()=>{},getScreenshot:t=>{let e="";for(let a=0;a<t.length;a++)e+=`<a href="${t[a]}" class="pict_link">p${a}</a> `;return e}},e={render:()=>{const t=e.populateData(),a=[];for(let e=0;e<t.length;e++)a.push(t[e].balance);const n=Math.max(...a),d=Math.min(...a),l=n-d,s=640/a.length,o=e.getYLabel(n,d),r=e.getXLabel(a.length,s),i=["top","left","right","bottom"];let p="";for(let n=0;n<a.length;n++){const o=(a[n]-d)/l*200+0,r=(n+1)*s,c=o-(a[n+1]-d)/l*200,$=Math.sqrt(c*c+s*s),u=Math.asin(c/$)*(180/Math.PI);p+=`<li title="${Number(a[n]).toFixed(2)}" style="--y: ${o}px; --x: ${r}px;">  <div class="data-point" data-value="${a[n]}" data-toggle="popover" title="${"deposit"===t[n].type?"Deposit":e.getPopoverTitle(t[n].pair,t[n].type,t[n].volume)}" data-content="${t[n].profit>0?"$":"-$"}${t[n].profit>0?t[n].profit:Math.sqrt(t[n].profit*t[n].profit)}, balance: $${t[n].balance}" data-placement="${i[Math.floor(4*Math.random())]}"  ></div>  <div class="line-segment" style="--hypotenuse:${$}; --angle:${u};"></div></li>`}$("#lineChart").html(p),$("#chartYLabel").html(o),$("#chartXLabel").html(r)},populateData:()=>{const t=[];let e=0;for(let a=0;a<Trades.length;a++){const{pair:n,type:d,volume:l,profit:s,swap:o}=Trades[a];t.push({pair:n,type:d,volume:l,profit:s,balance:e+s+o}),e=e+s+o}return t},getYLabel:(t,e)=>{let a="";const n=[t.toFixed(2)],d=[.75,.5,.25],l=[200,150,100,50,0],s=t-e;for(let t=0;t<d.length;t++)n.push((s*d[t]+e).toFixed(2));n.push(e.toFixed(2));for(let t=0;t<n.length;t++)a+=`<li class="YLabel" style="--y:${l[t]}px;"> <div class="dataYLabel">${n[t]}</div></li>`;return a},getXLabel:(t,e)=>{let a="";const n=[],d=[],l=Math.floor(t/6);for(let a=0;a<t;a++)n.push({value:a+1,position:e*(a+1)});for(let t=0;t<n.length;t+=l)d.push(n[t]);for(let t=0;t<d.length;t++){const{value:e,position:n}=d[t];a+=`<li class="XLabel" style="--x:${n}px;">  <div class="dataXLabel">${e}</div></li>`}return a},getPopoverTitle:(t,e,a)=>`${t} ${e} ${a}`};t.render(),e.render(),$("#tradeTable").DataTable(),$(".data-point").hover(function(){$(this).popover("show")},function(){$(this).popover("hide")}),$('[data-toggle="popover"]').popover()});
